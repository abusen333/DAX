OutOfOrderFrom =
VAR CurrentID = Table1[ID]
VAR CurrentExpectedOrder = Table1[ExpectedOrder]
VAR CurrentActualDateTime = Table1[ActualDateTime]
VAR ViolatingRow =
    CALCULATETABLE (
        TOPN (
            1,
            FILTER (
                Table1,
                Table1[ID] = CurrentID &&
                Table1[ExpectedOrder] < CurrentExpectedOrder &&
                Table1[ActualDateTime] > CurrentActualDateTime
            ),
            Table1[ActualDateTime], ASC
        )
    )
RETURN
IF (
    COUNTROWS(ViolatingRow) > 0,
    MAXX(ViolatingRow, Table1[Event]),
    BLANK()
)

OutOfOrderFrom =
VAR CurrentID = Table1[ID]
VAR CurrentExpectedOrder = Table1[ExpectedOrder]
VAR CurrentActualDateTime = Table1[ActualDateTime]

-- Get the latest valid datetime of a lower-order event
VAR LatestPriorValid =
    CALCULATE (
        MAX (Table1[ActualDateTime]),
        FILTER (
            Table1,
            Table1[ID] = CurrentID &&
            Table1[ExpectedOrder] < CurrentExpectedOrder
        )
    )

-- Is this row before that latest valid row? Then it's out of order.
RETURN
IF (
    CurrentActualDateTime < LatestPriorValid,
    CALCULATE (
        MAX (Table1[Event]),
        FILTER (
            Table1,
            Table1[ID] = CurrentID &&
            Table1[ExpectedOrder] < CurrentExpectedOrder &&
            Table1[ActualDateTime] = LatestPriorValid
        )
    ),
    BLANK()
)


Reversed from(tanfeeth Only) = 
VAR CurrentAppID = data[app_id]
VAR CurrentStage = data[tanfeeth_stage]
VAR CurrentExpectedOrder = data[tanfeeth_stage_order]
VAR CurrentActualTime = data[step_start_date_time]

-- Find the latest valid stage that should come before this one
VAR LatestPriorValid = 
    CALCULATE (
        MAX ( data[step_start_date_time] ),
        FILTER (
            data,
            data[app_id] = CurrentAppID
                && data[tanfeeth_stage_order] < CurrentExpectedOrder
        )
    )

-- Find next stage with the same name if this is a reversal to the same stage
VAR NextSameStage =
    CALCULATE (
        MIN ( data[step_start_date_time] ),
        FILTER (
            data,
            data[app_id] = CurrentAppID
                && data[tanfeeth_stage] = CurrentStage
                && data[step_start_date_time] > CurrentActualTime
        )
    )

RETURN
IF (
    CurrentActualTime <= LatestPriorValid,
    -- This is out of order, find what it should reverse to
    CALCULATE (
        MIN ( data[tanfeeth_stage] ),
        FILTER (
            data,
            data[app_id] = CurrentAppID
                && data[tanfeeth_stage_order] < CurrentExpectedOrder
                && data[step_start_date_time] = LatestPriorValid
        )
    ),
    -- If this is a repeated stage, check if there's a next occurrence
    IF (
        NOT ISBLANK(NextSameStage),
        CurrentStage & " (Repeated)",
        BLANK()
    )
)